#include <MIDI.h>
#include <SoftwareSerial.h>

// MIDI Setup
MIDI_CREATE_DEFAULT_INSTANCE();

// Bluetooth serial communication
SoftwareSerial mySerial(8, 9); // Adjust pins as necessary

// Array to store notes
const int maxNotes = 10; // Adjust size based on how complex the chord detection needs to be
int notes[maxNotes] = {0};

// Initialize notes array
void clearNotes() {
    for (int i = 0; i < maxNotes; i++) {
        notes[i] = 0;
    }
}

// Function to add note to array
void addNote(int note) {
    for (int i = 0; i < maxNotes; i++) {
        if (notes[i] == 0) {
            notes[i] = note;
            break;
        }
    }
}

// Function to remove note from array
void removeNote(int note) {
    for (int i = 0; i < maxNotes; i++) {
        if (notes[i] == note) {
            notes[i] = 0;
            break;
        }
    }
}

// Function to check for chords
void checkChords() {
    // Checking for C Major
    if (containsNotes(60, 64, 67)) {
        mySerial.println("C");
    }
    // Checking for G Major
    else if (containsNotes(67, 71, 74)) {
        mySerial.println("G");
    }
    // Checking for C Minor
    else if (containsNotes(60, 63, 67)) {
        mySerial.println("Cm");
    }
    // Checking for D Major
    else if (containsNotes(62, 66, 69)) {
        mySerial.println("D");
    }
}

// Utility function to check if certain notes are present
bool containsNotes(int n1, int n2, int n3) {
    bool found1 = false, found2 = false, found3 = false;
    for (int i = 0; i < maxNotes; i++) {
        if (notes[i] == n1) found1 = true;
        if (notes[i] == n2) found2 = true;
        if (notes[i] == n3) found3 = true;
    }
    return found1 && found2 && found3;
}

void setup() {
    MIDI.begin(MIDI_CHANNEL_OMNI);
    mySerial.begin(38400);  // Adjust baud rate as necessary
    clearNotes();
}

void handleNoteOn(byte channel, byte pitch, byte velocity) {
    addNote(pitch);
    checkChords();
}

void handleNoteOff(byte channel, byte pitch, byte velocity) {
    removeNote(pitch);
}

void loop() {
    MIDI.read();
}
